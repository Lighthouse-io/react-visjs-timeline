{"version":3,"sources":["../src/index.js"],"names":["noop","events","eventPropTypes","eventDefaultProps","event","PropTypes","func","ReactTimeline","props","state","customTimes","$el","destroy","container","refs","Timeline","undefined","options","forEach","on","init","nextProps","items","groups","selection","itemsChange","groupsChange","optionsChange","customTimesChange","selectionChange","selectionOptions","animate","currentTime","timelineOptions","setWindow","start","end","animation","setOptions","length","groupsDataset","DataSet","add","setGroups","setItems","setSelection","setCurrentTime","customTimeKeysPrev","customTimeKeysNew","customTimeKeysToAdd","customTimeKeysToRemove","customTimeKeysToUpdate","removeCustomTime","id","datetime","addCustomTime","setCustomTime","setState","Component","propTypes","array","object","shape","instanceOf","Date","string","oneOfType","bool","number","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["import { Timeline, DataSet } from 'timeline-plus/dist/timeline.min'\nimport 'timeline-plus/dist/timeline.min.css'\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport difference from 'lodash/difference'\nimport intersection from 'lodash/intersection'\nimport each from 'lodash/each'\nimport assign from 'lodash/assign'\nimport omit from 'lodash/omit'\nimport keys from 'lodash/keys'\n\nconst noop = function() {}\nconst events = [\n  'currentTimeTick',\n  'click',\n  'contextmenu',\n  'doubleClick',\n  'groupDragged',\n  'changed',\n  'rangechange',\n  'rangechanged',\n  'select',\n  'timechange',\n  'timechanged',\n  'mouseOver',\n  'mouseMove',\n  'itemover',\n  'itemout',\n]\n\nconst eventPropTypes = {}\nconst eventDefaultProps = {}\n\neach(events, event => {\n  ;(eventPropTypes[event] = PropTypes.func),\n    (eventDefaultProps[`${event}Handler`] = noop)\n})\n\nexport default class ReactTimeline extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      customTimes: [],\n    }\n  }\n\n  componentWillUnmount() {\n    this.$el.destroy()\n  }\n\n  componentDidMount() {\n    const { container } = this.refs\n\n    this.$el = new Timeline(container, undefined, this.props.options)\n\n    events.forEach(event => {\n      this.$el.on(event, this.props[`${event}Handler`])\n    })\n\n    this.init()\n  }\n\n  componentDidUpdate() {\n    this.init()\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const { items, groups, options, selection, customTimes } = this.props\n\n    const itemsChange = items !== nextProps.items\n    const groupsChange = groups !== nextProps.groups\n    const optionsChange = options !== nextProps.options\n    const customTimesChange = customTimes !== nextProps.customTimes\n    const selectionChange = selection !== nextProps.selection\n\n    return (\n      itemsChange ||\n      groupsChange ||\n      optionsChange ||\n      customTimesChange ||\n      selectionChange\n    )\n  }\n\n  init() {\n    const {\n      items,\n      groups = [],\n      options,\n      selection,\n      selectionOptions = {},\n      customTimes,\n      animate = true,\n      currentTime,\n    } = this.props\n\n    let timelineOptions = options\n\n    if (animate) {\n      // If animate option is set, we should animate the timeline to any new\n      // start/end values instead of jumping straight to them\n      timelineOptions = omit(options, 'start', 'end')\n\n      this.$el.setWindow(options.start, options.end, {\n        animation: animate,\n      })\n    }\n\n    this.$el.setOptions(timelineOptions)\n\n    if (groups.length > 0) {\n      const groupsDataset = new DataSet()\n      groupsDataset.add(groups)\n      this.$el.setGroups(groupsDataset)\n    }\n\n    this.$el.setItems(items)\n    this.$el.setSelection(selection, selectionOptions)\n\n    if (currentTime) {\n      this.$el.setCurrentTime(currentTime)\n    }\n\n    // diff the custom times to decipher new, removing, updating\n    const customTimeKeysPrev = keys(this.state.customTimes)\n    const customTimeKeysNew = keys(customTimes)\n    const customTimeKeysToAdd = difference(\n      customTimeKeysNew,\n      customTimeKeysPrev\n    )\n    const customTimeKeysToRemove = difference(\n      customTimeKeysPrev,\n      customTimeKeysNew\n    )\n    const customTimeKeysToUpdate = intersection(\n      customTimeKeysPrev,\n      customTimeKeysNew\n    )\n\n    // NOTE this has to be in arrow function so context of `this` is based on\n    // this.$el and not `each`\n    each(customTimeKeysToRemove, id => this.$el.removeCustomTime(id))\n    each(customTimeKeysToAdd, id => {\n      const datetime = customTimes[id]\n      this.$el.addCustomTime(datetime, id)\n    })\n    each(customTimeKeysToUpdate, id => {\n      const datetime = customTimes[id]\n      this.$el.setCustomTime(datetime, id)\n    })\n\n    // store new customTimes in state for future diff\n    this.setState({ customTimes })\n  }\n\n  render() {\n    return <div ref=\"container\" />\n  }\n}\n\nTimeline.propTypes = assign(\n  {\n    items: PropTypes.array,\n    groups: PropTypes.array,\n    options: PropTypes.object,\n    selection: PropTypes.array,\n    customTimes: PropTypes.shape({\n      datetime: PropTypes.instanceOf(Date),\n      id: PropTypes.string,\n    }),\n    animate: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n    currentTime: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.instanceOf(Date),\n      PropTypes.number,\n    ]),\n  },\n  eventPropTypes\n)\n\nTimeline.defaultProps = assign(\n  {\n    items: [],\n    groups: [],\n    options: {},\n    selection: [],\n    customTimes: {},\n  },\n  eventDefaultProps\n)\n"]}